services:

  db:
    container_name: postgresql_db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment: 
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]  # Healthcheck for PostgreSQL
        interval: 60s
        timeout: 10s
        retries: 5
    volumes:
      - ./postgres_data:/var/lib/postgresql/data #persisting data 
            
  pgadmin:  
    container_name: pg_admin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80 # for local browser (80 is the default port of the browsed)
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin  # Persisting pgAdmin configuration and sessions
    depends_on: 
      - db


  #new etl
  etl:
    container_name: etl
    build:
      context: ./etl
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
        - ./etl:/etl
    depends_on: 
      db:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  
  back:
    build:
      context: ./back
      dockerfile: Dockerfile
    # command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn main:app --host 0.0.0.0'
    volumes:
      - ./back:/back
    ports:
      - 8008:8000
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db

  front:
    container_name: streamlit_front
    build:
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front:/front
    ports:
      - 8501:8501
    environment:
      - API_URL=http://back:8000
    depends_on:
      - back

